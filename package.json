{
  "name": "pccd",
  "description": "Paremiologia catalana comparada digital",
  "repository": "https://github.com/Softcatala/pccd.git",
  "homepage": "https://pccd.dites.cat",
  "bugs": "https://github.com/Softcatala/pccd/issues",
  "author": "Pere Orga Esteve <pere@orga.cat>",
  "license": "AGPL-3.0-or-later",
  "private": true,
  "type": "module",
  "engines": {
    "node": ">=22"
  },
  "scripts": {
    "analysis": "concurrently -g --timings 'npm:analysis:*'",
    "analysis:phpstan": "./composer.phar run phpstan",
    "analysis:psalm": "./composer.phar run psalm",
    "analysis:rector": "./composer.phar run rector-lint",
    "build:assets": "node scripts/build-assets.js && npm run export:asset-sizes && npm run validate:asset-sizes",
    "check:code": "./composer.phar run php-l && concurrently -g --timings npm:validate:asset-sizes npm:lint npm:analysis npm:test:bash npm:test:node npm:test:phpunit",
    "clean:temp": "rm -rf test-results/ && rm -rf tmp/og/ && find tmp/ -maxdepth 1 -type f \\( -name '*.html' -o -name '*.json' ! -name assets-sizes.json \\) -delete && find . -maxdepth 1 -type f -name '*.html' -delete",
    "convert:db": "scripts/install/convert_db.sh",
    "decompress:images": "scripts/install/decompress_images.sh",
    "delete:images": "find docroot/img/imatges/ docroot/img/obres/ -mindepth 1 -delete",
    "docker:build": "scripts/docker_build.sh",
    "docker:build:alpine": "scripts/docker_build.sh --alpine",
    "docker:build:alpine-edge": "scripts/docker_build.sh --alpine-edge",
    "docker:build:spx": "scripts/docker_build.sh --build-arg profiler=spx",
    "docker:build:xhprof": "scripts/docker_build.sh --build-arg profiler=xhprof",
    "docker:sh": "docker exec -it pccd-web /bin/sh",
    "export:asset-sizes": "size-limit --json | jq '[.[] | {name: .name, size: .size}]' > tmp/assets-sizes.json",
    "export:code": "npm run clean:temp && scripts/export_code.sh",
    "export:commonvoice": "scripts/common-voice-export/export.sh",
    "export:db": "scripts/export_db.sh",
    "fix": "concurrently -g --timings 'npm:fix:*' && npm run format",
    "fix:composer": "./composer.phar run composer-normalize",
    "fix:eslint": "eslint --fix 'scripts/**' 'src/**' 'tests/**'",
    "fix:rector": "./composer.phar run rector",
    "fix:stylelint": "stylelint --fix strict src/css/",
    "format": "concurrently -g --timings 'npm:format:*'",
    "format:php-cs-fixer": "./composer.phar run php-cs-fixer",
    "format:phpcbf": "./composer.phar run phpcbf",
    "format:prettier": "prettier --write .",
    "format:shfmt": "shfmt -l -w .",
    "generate:reports": "concurrently -g --timings 'npm:generate:reports:*'; scripts/report-generation/aggregate_reports.sh",
    "generate:reports:fonts_urls": "docker exec pccd-web php scripts/report-generation/generate_report.php fonts_urls > tmp/test_fonts_URL.txt",
    "generate:reports:html_escape_and_link_urls": "docker exec pccd-web php scripts/report-generation/generate_report.php html_escape_and_link_urls > tmp/test_html_escape_and_link_urls.txt",
    "generate:reports:image_formats": "scripts/validate/validate_image_formats.sh > /dev/null",
    "generate:reports:imatges_duplicades": "node scripts/report-generation/report-duplicate-images.js > tmp/test_imatges_duplicades.txt",
    "generate:reports:imatges_links_part1": "docker exec pccd-web php scripts/report-generation/generate_report.php imatges_links 0 1500 > tmp/test_tmp_imatges_URL_ENLLAC_1.txt",
    "generate:reports:imatges_links_part2": "docker exec pccd-web php scripts/report-generation/generate_report.php imatges_links 1500 3000 > tmp/test_tmp_imatges_URL_ENLLAC_2.txt",
    "generate:reports:imatges_links_part3": "docker exec pccd-web php scripts/report-generation/generate_report.php imatges_links 3000 3500 > tmp/test_tmp_imatges_URL_ENLLAC_3.txt",
    "generate:reports:imatges_links_part4": "docker exec pccd-web php scripts/report-generation/generate_report.php imatges_links 3500 > tmp/test_tmp_imatges_URL_ENLLAC_4.txt",
    "generate:reports:imatges_no_existents": "docker exec pccd-web php scripts/report-generation/generate_report.php imatges_no_existents > tmp/test_imatges_no_existents.txt",
    "generate:reports:imatges_no_referenciades": "docker exec pccd-web php scripts/report-generation/generate_report.php imatges_no_referenciades > tmp/test_imatges_no_referenciades.txt",
    "generate:reports:imatges_urls_part1": "docker exec pccd-web php scripts/report-generation/generate_report.php imatges_urls 0 500 > tmp/test_tmp_imatges_URL_IMATGE_1.txt",
    "generate:reports:imatges_urls_part2": "docker exec pccd-web php scripts/report-generation/generate_report.php imatges_urls 500 1500 > tmp/test_tmp_imatges_URL_IMATGE_2.txt",
    "generate:reports:imatges_urls_part3": "docker exec pccd-web php scripts/report-generation/generate_report.php imatges_urls 1500 > tmp/test_tmp_imatges_URL_IMATGE_3.txt",
    "generate:reports:intl_modismes_molt_diferents": "docker exec pccd-web php scripts/report-generation/generate_report.php intl_modismes_molt_diferents > tmp/test_intl_modismes_molt_diferents.txt",
    "generate:reports:intl_modismes_repetits": "docker exec pccd-web php scripts/report-generation/generate_report.php intl_modismes_repetits > tmp/test_intl_modismes_repetits.txt",
    "generate:reports:intl_modismes_sospitosos": "docker exec pccd-web php scripts/report-generation/generate_report.php intl_modismes_sospitosos > tmp/test_intl_modismes_sospitosos.txt",
    "generate:reports:intl_paremiotipus_repetits": "docker exec pccd-web php scripts/report-generation/generate_report.php intl_paremiotipus_repetits > tmp/test_intl_paremiotipus_repetits.txt",
    "generate:reports:intl_paremiotipus_sospitosos": "docker exec pccd-web php scripts/report-generation/generate_report.php intl_paremiotipus_sospitosos > tmp/test_intl_paremiotipus_sospitosos.txt",
    "generate:reports:languagetool": "scripts/report-generation/languagetool-checker/generate_lt_report.sh",
    "generate:reports:llibres_urls": "docker exec pccd-web php scripts/report-generation/generate_report.php llibres_urls > tmp/test_llibres_URL.txt",
    "generate:reports:paremiotipus_accents": "docker exec pccd-web php scripts/report-generation/generate_report.php paremiotipus_accents > tmp/test_paremiotipus_accents.txt",
    "generate:reports:paremiotipus_repetits_part1": "docker exec pccd-web php scripts/report-generation/generate_report.php paremiotipus_repetits 0 12000 > tmp/test_tmp_repetits_1.txt",
    "generate:reports:paremiotipus_repetits_part2": "docker exec pccd-web php scripts/report-generation/generate_report.php paremiotipus_repetits 12000 28000 > tmp/test_tmp_repetits_2.txt",
    "generate:reports:paremiotipus_repetits_part3": "docker exec pccd-web php scripts/report-generation/generate_report.php paremiotipus_repetits 28000 50000 > tmp/test_tmp_repetits_3.txt",
    "generate:reports:paremiotipus_repetits_part4": "docker exec pccd-web php scripts/report-generation/generate_report.php paremiotipus_repetits 50000 > tmp/test_tmp_repetits_4.txt",
    "generate:reports:sinonims": "docker exec pccd-web php scripts/report-generation/sinonims-export/app.php > scripts/report-generation/sinonims-export/sinonims_strict.txt 2> scripts/report-generation/sinonims-export/sinonims.txt",
    "generate:reports:small_images": "node scripts/report-generation/report-small-images.js > tmp/test_imatges_petites.txt",
    "generate:reports:unsupported_image_extensions": "node scripts/report-generation/report-unsupported-image-extensions.js > tmp/test_imatges_file_extensions.txt",
    "import:commonvoice": "scripts/common-voice-export/import.sh",
    "install:db": "scripts/install.sh",
    "lint": "concurrently -g --timings 'npm:lint:*'",
    "lint-renovate": "npx --yes -package renovate renovate-config-validator",
    "lint:composer": "./composer.phar validate --strict",
    "lint:composer-normalize": "./composer.phar run composer-normalize-lint",
    "lint:docker": "if command -v hadolint >/dev/null 2>&1; then hadolint .docker/*Dockerfile; else echo 'hadolint not found, skipping docker linting' >&2; exit 0; fi",
    "lint:eslint": "eslint 'scripts/**' 'src/**' 'tests/**'",
    "lint:eslint-redundancy": "node scripts/lint/eslint-check-rule-redundancy.js",
    "lint:htmlhint-completeness": "node scripts/lint/htmlhint-check-rule-completeness.js",
    "lint:htmlvalidate-redundancy": "node scripts/lint/htmlvalidate-check-rule-redundancy.js",
    "lint:ls": "ls-lint",
    "lint:markdown": "markdownlint *.md docs/*.md",
    "lint:php-cs-fixer": "./composer.phar run php-cs-fixer-lint",
    "lint:phpcs": "./composer.phar run phpcs",
    "lint:prettier": "prettier --log-level log --check .",
    "lint:shellcheck": "for file in $(find scripts tests -type f -name '*.sh' -not -name '*.generated.sh'); do shellcheck \"$file\" || exit 1; done",
    "lint:shfmt": "shfmt -l -d .",
    "lint:stylelint": "stylelint src/css/",
    "lint:stylelint-redundancy": "node scripts/lint/stylelint-check-rule-redundancy.js",
    "lint:xml": "xmllint --noout *.xml docroot/*.xml",
    "lint:yamllint": "yamllint . --strict",
    "optimize:images": "node scripts/install/optimize-images.js && npm run optimize:svg",
    "optimize:svg": "svgo --eol lf --multipass -r --folder docroot/img",
    "outdated": "concurrently -g --timings 'npm:outdated:*'",
    "outdated:composer": "./composer.phar outdated --direct",
    "outdated:npm": "npm outdated",
    "postinstall": "./composer.phar install --no-interaction && npx playwright install",
    "prepare": "husky",
    "refresh:test-data": "node tests/playwright/refresh-test-data.js",
    "sync:external-reports": "(cd ../sinonims-cat/ && git pull --no-edit) && node scripts/report-generation/softcatala-sinonims-export.js > src/reports/softcatala_sinonims.txt; (cd ../dsff-cms/ && git pull --no-edit && npm run ssh:extract-frases-pccd)",
    "test": "npm run test:bash && npm run test:node && npm run test:phpunit && npm run test:e2e && npm run validate:pages && npm run validate:lighthouse && npm run validate:ssl-expiration",
    "test:bash": "for script in tests/bash/*.sh; do \"$script\" || exit 1; done",
    "test:e2e": "playwright test",
    "test:node": "node --test tests/**/*.test.js",
    "test:phpunit": "./composer.phar run phpunit",
    "update": "concurrently -g --timings 'npm:update:*'",
    "update:composer": "scripts/update_deps.sh composer",
    "update:docker": "scripts/update_deps.sh docker",
    "update:npm": "scripts/update_deps.sh npm",
    "validate:asset-sizes": "size-limit --silent",
    "validate:lighthouse": "scripts/validate/lighthouse_audit.sh",
    "validate:pages": "scripts/validate/validate_pages.sh",
    "validate:sitemap-urls": "scripts/validate/validate_sitemap_urls.sh",
    "validate:ssl-expiration": "scripts/validate/validate_ssl_expiration.sh"
  },
  "dependencies": {
    "chart.js": "4.5.0",
    "simple-datatables": "10.0.0"
  },
  "devDependencies": {
    "@ls-lint/ls-lint": "2.3.1",
    "@pccd/lt-filter": "7.0.1",
    "@playwright/test": "1.55.1",
    "@size-limit/file": "11.2.0",
    "concurrently": "9.2.1",
    "esbuild": "0.25.10",
    "eslint": "9.36.0",
    "eslint-plugin-regexp": "2.10.0",
    "eslint-plugin-unicorn": "61.0.2",
    "html-validate": "10.0.0",
    "htmlhint": "1.7.1",
    "husky": "9.1.7",
    "lighthouse": "12.8.2",
    "lightningcss": "1.30.2",
    "linkinator": "6.1.4",
    "markdownlint-cli": "0.45.0",
    "prettier": "3.6.2",
    "sharp": "0.34.4",
    "size-limit": "11.2.0",
    "stylelint": "16.24.0",
    "stylelint-config-recess-order": "7.3.0",
    "stylelint-config-standard": "39.0.0",
    "svgo": "4.0.0"
  }
}
